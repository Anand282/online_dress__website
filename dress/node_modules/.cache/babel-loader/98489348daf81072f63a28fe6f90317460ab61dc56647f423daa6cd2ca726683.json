{"ast":null,"code":"// frontend/src/features/cartSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchCart = () => async dispatch => {\n  try {\n    const response = await axios.get(\"/api/cart\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      }\n    });\n    dispatch(setCart(response.data.cart));\n  } catch (error) {\n    console.error(\"Error fetching cart:\", error);\n  }\n};\nexport const syncCart = cart => async dispatch => {\n  try {\n    await axios.post(\"/api/add-to-cart\", cart, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      }\n    });\n  } catch (error) {\n    console.error(\"Error syncing cart:\", error);\n  }\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.items.push(action.payload);\n      }\n    },\n    updateQuantity: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity = action.payload.quantity;\n      }\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload);\n    },\n    setCart: (state, action) => {\n      state.items = action.payload;\n    }\n  }\n});\nexport const {\n  addToCart,\n  updateQuantity,\n  removeFromCart,\n  setCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","axios","fetchCart","dispatch","response","get","headers","Authorization","localStorage","getItem","setCart","data","cart","error","console","syncCart","post","cartSlice","name","initialState","items","reducers","addToCart","state","action","item","find","id","payload","quantity","push","updateQuantity","removeFromCart","filter","actions","reducer"],"sources":["D:/dresspro/dress/src/features/cartSlice.js"],"sourcesContent":["// frontend/src/features/cartSlice.js\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCart = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\"/api/cart\", { headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` } });\r\n        dispatch(setCart(response.data.cart));\r\n    } catch (error) {\r\n        console.error(\"Error fetching cart:\", error);\r\n    }\r\n};\r\n\r\nexport const syncCart = (cart) => async (dispatch) => {\r\n    try {\r\n        await axios.post(\"/api/add-to-cart\", cart, { headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` } });\r\n    } catch (error) {\r\n        console.error(\"Error syncing cart:\", error);\r\n    }\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n    },\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const item = state.items.find((item) => item.id === action.payload.id);\r\n            if (item) {\r\n                item.quantity += action.payload.quantity;\r\n            } else {\r\n                state.items.push(action.payload);\r\n            }\r\n        },\r\n        updateQuantity: (state, action) => {\r\n            const item = state.items.find((item) => item.id === action.payload.id);\r\n            if (item) {\r\n                item.quantity = action.payload.quantity;\r\n            }\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            state.items = state.items.filter((item) => item.id !== action.payload);\r\n        },\r\n        setCart: (state, action) => {\r\n            state.items = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addToCart, updateQuantity, removeFromCart, setCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,WAAW,EAAE;MAAEC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAAG;IAAE,CAAC,CAAC;IAC5HN,QAAQ,CAACO,OAAO,CAACN,QAAQ,CAACO,IAAI,CAACC,IAAI,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAChD;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAIH,IAAI,IAAK,MAAOT,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMF,KAAK,CAACe,IAAI,CAAC,kBAAkB,EAAEJ,IAAI,EAAE;MAAEN,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAAG;IAAE,CAAC,CAAC;EAC7H,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ,CAAC;AAED,MAAMI,SAAS,GAAGjB,WAAW,CAAC;EAC1BkB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,IAAI,GAAGF,KAAK,CAACH,KAAK,CAACM,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC;MACtE,IAAIF,IAAI,EAAE;QACNA,IAAI,CAACI,QAAQ,IAAIL,MAAM,CAACI,OAAO,CAACC,QAAQ;MAC5C,CAAC,MAAM;QACHN,KAAK,CAACH,KAAK,CAACU,IAAI,CAACN,MAAM,CAACI,OAAO,CAAC;MACpC;IACJ,CAAC;IACDG,cAAc,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMC,IAAI,GAAGF,KAAK,CAACH,KAAK,CAACM,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC;MACtE,IAAIF,IAAI,EAAE;QACNA,IAAI,CAACI,QAAQ,GAAGL,MAAM,CAACI,OAAO,CAACC,QAAQ;MAC3C;IACJ,CAAC;IACDG,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACa,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAAC;IAC1E,CAAC;IACDlB,OAAO,EAAEA,CAACa,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACI,OAAO;IAChC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,SAAS;EAAES,cAAc;EAAEC,cAAc;EAAEtB;AAAQ,CAAC,GAAGO,SAAS,CAACiB,OAAO;AACvF,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}